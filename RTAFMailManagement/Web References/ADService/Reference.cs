//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RTAFMailManagement.ADService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ADServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ADService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback svCreateADUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback svADDUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback svRemoveUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback svCheck_UserOperationCompleted;
        
        private System.Threading.SendOrPostCallback svCheck_UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback svEnableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback svDisableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback svDeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback svResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback svUpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgMoveUserFromOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback svCreateADGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback svCheck_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgCreateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgRenameGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgDelectGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgCreateOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgRenameOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvIdgDelectOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback SvGetGroupUserArrOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ADService() {
            this.Url = global::RTAFMailManagement.Properties.Settings.Default.RTAFMailManagement_ADService_ADService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event svCreateADUserCompletedEventHandler svCreateADUserCompleted;
        
        /// <remarks/>
        public event svADDUserToGroupCompletedEventHandler svADDUserToGroupCompleted;
        
        /// <remarks/>
        public event svRemoveUserToGroupCompletedEventHandler svRemoveUserToGroupCompleted;
        
        /// <remarks/>
        public event svCheck_UserCompletedEventHandler svCheck_UserCompleted;
        
        /// <remarks/>
        public event svCheck_UserLoginCompletedEventHandler svCheck_UserLoginCompleted;
        
        /// <remarks/>
        public event svEnableUserCompletedEventHandler svEnableUserCompleted;
        
        /// <remarks/>
        public event svDisableUserCompletedEventHandler svDisableUserCompleted;
        
        /// <remarks/>
        public event svDeleteUserCompletedEventHandler svDeleteUserCompleted;
        
        /// <remarks/>
        public event svResetPasswordCompletedEventHandler svResetPasswordCompleted;
        
        /// <remarks/>
        public event svUpdateUserCompletedEventHandler svUpdateUserCompleted;
        
        /// <remarks/>
        public event SvIdgMoveUserFromOUCompletedEventHandler SvIdgMoveUserFromOUCompleted;
        
        /// <remarks/>
        public event svCreateADGroupCompletedEventHandler svCreateADGroupCompleted;
        
        /// <remarks/>
        public event svCheck_GroupCompletedEventHandler svCheck_GroupCompleted;
        
        /// <remarks/>
        public event SvIdgCreateGroupCompletedEventHandler SvIdgCreateGroupCompleted;
        
        /// <remarks/>
        public event SvIdgRenameGroupCompletedEventHandler SvIdgRenameGroupCompleted;
        
        /// <remarks/>
        public event SvIdgDelectGroupCompletedEventHandler SvIdgDelectGroupCompleted;
        
        /// <remarks/>
        public event SvIdgCreateOUCompletedEventHandler SvIdgCreateOUCompleted;
        
        /// <remarks/>
        public event SvIdgRenameOUCompletedEventHandler SvIdgRenameOUCompleted;
        
        /// <remarks/>
        public event SvIdgDelectOUCompletedEventHandler SvIdgDelectOUCompleted;
        
        /// <remarks/>
        public event SvGetGroupUserArrCompletedEventHandler SvGetGroupUserArrCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svCreateADUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svCreateADUser(string Domain, string FirstName, string LastName, string Email, string UserName, string Password, bool IsAccountActive, string DisplayName, string OUName, string Company, string Title, string Description, string Tel, string St) {
            object[] results = this.Invoke("svCreateADUser", new object[] {
                        Domain,
                        FirstName,
                        LastName,
                        Email,
                        UserName,
                        Password,
                        IsAccountActive,
                        DisplayName,
                        OUName,
                        Company,
                        Title,
                        Description,
                        Tel,
                        St});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svCreateADUserAsync(string Domain, string FirstName, string LastName, string Email, string UserName, string Password, bool IsAccountActive, string DisplayName, string OUName, string Company, string Title, string Description, string Tel, string St) {
            this.svCreateADUserAsync(Domain, FirstName, LastName, Email, UserName, Password, IsAccountActive, DisplayName, OUName, Company, Title, Description, Tel, St, null);
        }
        
        /// <remarks/>
        public void svCreateADUserAsync(string Domain, string FirstName, string LastName, string Email, string UserName, string Password, bool IsAccountActive, string DisplayName, string OUName, string Company, string Title, string Description, string Tel, string St, object userState) {
            if ((this.svCreateADUserOperationCompleted == null)) {
                this.svCreateADUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvCreateADUserOperationCompleted);
            }
            this.InvokeAsync("svCreateADUser", new object[] {
                        Domain,
                        FirstName,
                        LastName,
                        Email,
                        UserName,
                        Password,
                        IsAccountActive,
                        DisplayName,
                        OUName,
                        Company,
                        Title,
                        Description,
                        Tel,
                        St}, this.svCreateADUserOperationCompleted, userState);
        }
        
        private void OnsvCreateADUserOperationCompleted(object arg) {
            if ((this.svCreateADUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svCreateADUserCompleted(this, new svCreateADUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svADDUserToGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svADDUserToGroup(string GroupName, string UserName) {
            object[] results = this.Invoke("svADDUserToGroup", new object[] {
                        GroupName,
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svADDUserToGroupAsync(string GroupName, string UserName) {
            this.svADDUserToGroupAsync(GroupName, UserName, null);
        }
        
        /// <remarks/>
        public void svADDUserToGroupAsync(string GroupName, string UserName, object userState) {
            if ((this.svADDUserToGroupOperationCompleted == null)) {
                this.svADDUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvADDUserToGroupOperationCompleted);
            }
            this.InvokeAsync("svADDUserToGroup", new object[] {
                        GroupName,
                        UserName}, this.svADDUserToGroupOperationCompleted, userState);
        }
        
        private void OnsvADDUserToGroupOperationCompleted(object arg) {
            if ((this.svADDUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svADDUserToGroupCompleted(this, new svADDUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svRemoveUserToGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svRemoveUserToGroup(string GroupName, string UserName) {
            object[] results = this.Invoke("svRemoveUserToGroup", new object[] {
                        GroupName,
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svRemoveUserToGroupAsync(string GroupName, string UserName) {
            this.svRemoveUserToGroupAsync(GroupName, UserName, null);
        }
        
        /// <remarks/>
        public void svRemoveUserToGroupAsync(string GroupName, string UserName, object userState) {
            if ((this.svRemoveUserToGroupOperationCompleted == null)) {
                this.svRemoveUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvRemoveUserToGroupOperationCompleted);
            }
            this.InvokeAsync("svRemoveUserToGroup", new object[] {
                        GroupName,
                        UserName}, this.svRemoveUserToGroupOperationCompleted, userState);
        }
        
        private void OnsvRemoveUserToGroupOperationCompleted(object arg) {
            if ((this.svRemoveUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svRemoveUserToGroupCompleted(this, new svRemoveUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svCheck_User", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svCheck_User(string User) {
            object[] results = this.Invoke("svCheck_User", new object[] {
                        User});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svCheck_UserAsync(string User) {
            this.svCheck_UserAsync(User, null);
        }
        
        /// <remarks/>
        public void svCheck_UserAsync(string User, object userState) {
            if ((this.svCheck_UserOperationCompleted == null)) {
                this.svCheck_UserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvCheck_UserOperationCompleted);
            }
            this.InvokeAsync("svCheck_User", new object[] {
                        User}, this.svCheck_UserOperationCompleted, userState);
        }
        
        private void OnsvCheck_UserOperationCompleted(object arg) {
            if ((this.svCheck_UserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svCheck_UserCompleted(this, new svCheck_UserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svCheck_UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svCheck_UserLogin(string userName, string password) {
            object[] results = this.Invoke("svCheck_UserLogin", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svCheck_UserLoginAsync(string userName, string password) {
            this.svCheck_UserLoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void svCheck_UserLoginAsync(string userName, string password, object userState) {
            if ((this.svCheck_UserLoginOperationCompleted == null)) {
                this.svCheck_UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvCheck_UserLoginOperationCompleted);
            }
            this.InvokeAsync("svCheck_UserLogin", new object[] {
                        userName,
                        password}, this.svCheck_UserLoginOperationCompleted, userState);
        }
        
        private void OnsvCheck_UserLoginOperationCompleted(object arg) {
            if ((this.svCheck_UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svCheck_UserLoginCompleted(this, new svCheck_UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svEnableUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svEnableUser(string userName) {
            object[] results = this.Invoke("svEnableUser", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svEnableUserAsync(string userName) {
            this.svEnableUserAsync(userName, null);
        }
        
        /// <remarks/>
        public void svEnableUserAsync(string userName, object userState) {
            if ((this.svEnableUserOperationCompleted == null)) {
                this.svEnableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvEnableUserOperationCompleted);
            }
            this.InvokeAsync("svEnableUser", new object[] {
                        userName}, this.svEnableUserOperationCompleted, userState);
        }
        
        private void OnsvEnableUserOperationCompleted(object arg) {
            if ((this.svEnableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svEnableUserCompleted(this, new svEnableUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svDisableUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svDisableUser(string userName) {
            object[] results = this.Invoke("svDisableUser", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svDisableUserAsync(string userName) {
            this.svDisableUserAsync(userName, null);
        }
        
        /// <remarks/>
        public void svDisableUserAsync(string userName, object userState) {
            if ((this.svDisableUserOperationCompleted == null)) {
                this.svDisableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvDisableUserOperationCompleted);
            }
            this.InvokeAsync("svDisableUser", new object[] {
                        userName}, this.svDisableUserOperationCompleted, userState);
        }
        
        private void OnsvDisableUserOperationCompleted(object arg) {
            if ((this.svDisableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svDisableUserCompleted(this, new svDisableUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svDeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svDeleteUser(string userName) {
            object[] results = this.Invoke("svDeleteUser", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svDeleteUserAsync(string userName) {
            this.svDeleteUserAsync(userName, null);
        }
        
        /// <remarks/>
        public void svDeleteUserAsync(string userName, object userState) {
            if ((this.svDeleteUserOperationCompleted == null)) {
                this.svDeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvDeleteUserOperationCompleted);
            }
            this.InvokeAsync("svDeleteUser", new object[] {
                        userName}, this.svDeleteUserOperationCompleted, userState);
        }
        
        private void OnsvDeleteUserOperationCompleted(object arg) {
            if ((this.svDeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svDeleteUserCompleted(this, new svDeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svResetPassword(string userName, string password) {
            object[] results = this.Invoke("svResetPassword", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svResetPasswordAsync(string userName, string password) {
            this.svResetPasswordAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void svResetPasswordAsync(string userName, string password, object userState) {
            if ((this.svResetPasswordOperationCompleted == null)) {
                this.svResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvResetPasswordOperationCompleted);
            }
            this.InvokeAsync("svResetPassword", new object[] {
                        userName,
                        password}, this.svResetPasswordOperationCompleted, userState);
        }
        
        private void OnsvResetPasswordOperationCompleted(object arg) {
            if ((this.svResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svResetPasswordCompleted(this, new svResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svUpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svUpdateUser(string userName, string FirstName, string LastName, string DisplayName, string Company, string Title, string Description, string Tel, string St) {
            object[] results = this.Invoke("svUpdateUser", new object[] {
                        userName,
                        FirstName,
                        LastName,
                        DisplayName,
                        Company,
                        Title,
                        Description,
                        Tel,
                        St});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svUpdateUserAsync(string userName, string FirstName, string LastName, string DisplayName, string Company, string Title, string Description, string Tel, string St) {
            this.svUpdateUserAsync(userName, FirstName, LastName, DisplayName, Company, Title, Description, Tel, St, null);
        }
        
        /// <remarks/>
        public void svUpdateUserAsync(string userName, string FirstName, string LastName, string DisplayName, string Company, string Title, string Description, string Tel, string St, object userState) {
            if ((this.svUpdateUserOperationCompleted == null)) {
                this.svUpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvUpdateUserOperationCompleted);
            }
            this.InvokeAsync("svUpdateUser", new object[] {
                        userName,
                        FirstName,
                        LastName,
                        DisplayName,
                        Company,
                        Title,
                        Description,
                        Tel,
                        St}, this.svUpdateUserOperationCompleted, userState);
        }
        
        private void OnsvUpdateUserOperationCompleted(object arg) {
            if ((this.svUpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svUpdateUserCompleted(this, new svUpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgMoveUserFromOU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgMoveUserFromOU(string Name, string OUFrom, string OUTo) {
            object[] results = this.Invoke("SvIdgMoveUserFromOU", new object[] {
                        Name,
                        OUFrom,
                        OUTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgMoveUserFromOUAsync(string Name, string OUFrom, string OUTo) {
            this.SvIdgMoveUserFromOUAsync(Name, OUFrom, OUTo, null);
        }
        
        /// <remarks/>
        public void SvIdgMoveUserFromOUAsync(string Name, string OUFrom, string OUTo, object userState) {
            if ((this.SvIdgMoveUserFromOUOperationCompleted == null)) {
                this.SvIdgMoveUserFromOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgMoveUserFromOUOperationCompleted);
            }
            this.InvokeAsync("SvIdgMoveUserFromOU", new object[] {
                        Name,
                        OUFrom,
                        OUTo}, this.SvIdgMoveUserFromOUOperationCompleted, userState);
        }
        
        private void OnSvIdgMoveUserFromOUOperationCompleted(object arg) {
            if ((this.SvIdgMoveUserFromOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgMoveUserFromOUCompleted(this, new SvIdgMoveUserFromOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svCreateADGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svCreateADGroup(string GroupName, string Desc, string OUName) {
            object[] results = this.Invoke("svCreateADGroup", new object[] {
                        GroupName,
                        Desc,
                        OUName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svCreateADGroupAsync(string GroupName, string Desc, string OUName) {
            this.svCreateADGroupAsync(GroupName, Desc, OUName, null);
        }
        
        /// <remarks/>
        public void svCreateADGroupAsync(string GroupName, string Desc, string OUName, object userState) {
            if ((this.svCreateADGroupOperationCompleted == null)) {
                this.svCreateADGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvCreateADGroupOperationCompleted);
            }
            this.InvokeAsync("svCreateADGroup", new object[] {
                        GroupName,
                        Desc,
                        OUName}, this.svCreateADGroupOperationCompleted, userState);
        }
        
        private void OnsvCreateADGroupOperationCompleted(object arg) {
            if ((this.svCreateADGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svCreateADGroupCompleted(this, new svCreateADGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/svCheck_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool svCheck_Group(string GroupName) {
            object[] results = this.Invoke("svCheck_Group", new object[] {
                        GroupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void svCheck_GroupAsync(string GroupName) {
            this.svCheck_GroupAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void svCheck_GroupAsync(string GroupName, object userState) {
            if ((this.svCheck_GroupOperationCompleted == null)) {
                this.svCheck_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsvCheck_GroupOperationCompleted);
            }
            this.InvokeAsync("svCheck_Group", new object[] {
                        GroupName}, this.svCheck_GroupOperationCompleted, userState);
        }
        
        private void OnsvCheck_GroupOperationCompleted(object arg) {
            if ((this.svCheck_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.svCheck_GroupCompleted(this, new svCheck_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgCreateGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgCreateGroup(string nameGroup, string Description) {
            object[] results = this.Invoke("SvIdgCreateGroup", new object[] {
                        nameGroup,
                        Description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgCreateGroupAsync(string nameGroup, string Description) {
            this.SvIdgCreateGroupAsync(nameGroup, Description, null);
        }
        
        /// <remarks/>
        public void SvIdgCreateGroupAsync(string nameGroup, string Description, object userState) {
            if ((this.SvIdgCreateGroupOperationCompleted == null)) {
                this.SvIdgCreateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgCreateGroupOperationCompleted);
            }
            this.InvokeAsync("SvIdgCreateGroup", new object[] {
                        nameGroup,
                        Description}, this.SvIdgCreateGroupOperationCompleted, userState);
        }
        
        private void OnSvIdgCreateGroupOperationCompleted(object arg) {
            if ((this.SvIdgCreateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgCreateGroupCompleted(this, new SvIdgCreateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgRenameGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgRenameGroup(string oldnameGroup, string newnameGroup) {
            object[] results = this.Invoke("SvIdgRenameGroup", new object[] {
                        oldnameGroup,
                        newnameGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgRenameGroupAsync(string oldnameGroup, string newnameGroup) {
            this.SvIdgRenameGroupAsync(oldnameGroup, newnameGroup, null);
        }
        
        /// <remarks/>
        public void SvIdgRenameGroupAsync(string oldnameGroup, string newnameGroup, object userState) {
            if ((this.SvIdgRenameGroupOperationCompleted == null)) {
                this.SvIdgRenameGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgRenameGroupOperationCompleted);
            }
            this.InvokeAsync("SvIdgRenameGroup", new object[] {
                        oldnameGroup,
                        newnameGroup}, this.SvIdgRenameGroupOperationCompleted, userState);
        }
        
        private void OnSvIdgRenameGroupOperationCompleted(object arg) {
            if ((this.SvIdgRenameGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgRenameGroupCompleted(this, new SvIdgRenameGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgDelectGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgDelectGroup(string Groupname) {
            object[] results = this.Invoke("SvIdgDelectGroup", new object[] {
                        Groupname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgDelectGroupAsync(string Groupname) {
            this.SvIdgDelectGroupAsync(Groupname, null);
        }
        
        /// <remarks/>
        public void SvIdgDelectGroupAsync(string Groupname, object userState) {
            if ((this.SvIdgDelectGroupOperationCompleted == null)) {
                this.SvIdgDelectGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgDelectGroupOperationCompleted);
            }
            this.InvokeAsync("SvIdgDelectGroup", new object[] {
                        Groupname}, this.SvIdgDelectGroupOperationCompleted, userState);
        }
        
        private void OnSvIdgDelectGroupOperationCompleted(object arg) {
            if ((this.SvIdgDelectGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgDelectGroupCompleted(this, new SvIdgDelectGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgCreateOU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgCreateOU(string NameOU, string Description) {
            object[] results = this.Invoke("SvIdgCreateOU", new object[] {
                        NameOU,
                        Description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgCreateOUAsync(string NameOU, string Description) {
            this.SvIdgCreateOUAsync(NameOU, Description, null);
        }
        
        /// <remarks/>
        public void SvIdgCreateOUAsync(string NameOU, string Description, object userState) {
            if ((this.SvIdgCreateOUOperationCompleted == null)) {
                this.SvIdgCreateOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgCreateOUOperationCompleted);
            }
            this.InvokeAsync("SvIdgCreateOU", new object[] {
                        NameOU,
                        Description}, this.SvIdgCreateOUOperationCompleted, userState);
        }
        
        private void OnSvIdgCreateOUOperationCompleted(object arg) {
            if ((this.SvIdgCreateOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgCreateOUCompleted(this, new SvIdgCreateOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgRenameOU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgRenameOU(string OldOU, string NewOU) {
            object[] results = this.Invoke("SvIdgRenameOU", new object[] {
                        OldOU,
                        NewOU});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgRenameOUAsync(string OldOU, string NewOU) {
            this.SvIdgRenameOUAsync(OldOU, NewOU, null);
        }
        
        /// <remarks/>
        public void SvIdgRenameOUAsync(string OldOU, string NewOU, object userState) {
            if ((this.SvIdgRenameOUOperationCompleted == null)) {
                this.SvIdgRenameOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgRenameOUOperationCompleted);
            }
            this.InvokeAsync("SvIdgRenameOU", new object[] {
                        OldOU,
                        NewOU}, this.SvIdgRenameOUOperationCompleted, userState);
        }
        
        private void OnSvIdgRenameOUOperationCompleted(object arg) {
            if ((this.SvIdgRenameOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgRenameOUCompleted(this, new SvIdgRenameOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvIdgDelectOU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SvIdgDelectOU(string OUName) {
            object[] results = this.Invoke("SvIdgDelectOU", new object[] {
                        OUName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SvIdgDelectOUAsync(string OUName) {
            this.SvIdgDelectOUAsync(OUName, null);
        }
        
        /// <remarks/>
        public void SvIdgDelectOUAsync(string OUName, object userState) {
            if ((this.SvIdgDelectOUOperationCompleted == null)) {
                this.SvIdgDelectOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvIdgDelectOUOperationCompleted);
            }
            this.InvokeAsync("SvIdgDelectOU", new object[] {
                        OUName}, this.SvIdgDelectOUOperationCompleted, userState);
        }
        
        private void OnSvIdgDelectOUOperationCompleted(object arg) {
            if ((this.SvIdgDelectOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvIdgDelectOUCompleted(this, new SvIdgDelectOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SvGetGroupUserArr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SvGetGroupUserArr(string UserName) {
            object[] results = this.Invoke("SvGetGroupUserArr", new object[] {
                        UserName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SvGetGroupUserArrAsync(string UserName) {
            this.SvGetGroupUserArrAsync(UserName, null);
        }
        
        /// <remarks/>
        public void SvGetGroupUserArrAsync(string UserName, object userState) {
            if ((this.SvGetGroupUserArrOperationCompleted == null)) {
                this.SvGetGroupUserArrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSvGetGroupUserArrOperationCompleted);
            }
            this.InvokeAsync("SvGetGroupUserArr", new object[] {
                        UserName}, this.SvGetGroupUserArrOperationCompleted, userState);
        }
        
        private void OnSvGetGroupUserArrOperationCompleted(object arg) {
            if ((this.SvGetGroupUserArrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SvGetGroupUserArrCompleted(this, new SvGetGroupUserArrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svCreateADUserCompletedEventHandler(object sender, svCreateADUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svCreateADUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svCreateADUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svADDUserToGroupCompletedEventHandler(object sender, svADDUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svADDUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svADDUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svRemoveUserToGroupCompletedEventHandler(object sender, svRemoveUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svRemoveUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svRemoveUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svCheck_UserCompletedEventHandler(object sender, svCheck_UserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svCheck_UserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svCheck_UserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svCheck_UserLoginCompletedEventHandler(object sender, svCheck_UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svCheck_UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svCheck_UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svEnableUserCompletedEventHandler(object sender, svEnableUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svEnableUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svEnableUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svDisableUserCompletedEventHandler(object sender, svDisableUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svDisableUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svDisableUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svDeleteUserCompletedEventHandler(object sender, svDeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svDeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svDeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svResetPasswordCompletedEventHandler(object sender, svResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svUpdateUserCompletedEventHandler(object sender, svUpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svUpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svUpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgMoveUserFromOUCompletedEventHandler(object sender, SvIdgMoveUserFromOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgMoveUserFromOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgMoveUserFromOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svCreateADGroupCompletedEventHandler(object sender, svCreateADGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svCreateADGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svCreateADGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void svCheck_GroupCompletedEventHandler(object sender, svCheck_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class svCheck_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal svCheck_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgCreateGroupCompletedEventHandler(object sender, SvIdgCreateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgCreateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgCreateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgRenameGroupCompletedEventHandler(object sender, SvIdgRenameGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgRenameGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgRenameGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgDelectGroupCompletedEventHandler(object sender, SvIdgDelectGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgDelectGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgDelectGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgCreateOUCompletedEventHandler(object sender, SvIdgCreateOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgCreateOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgCreateOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgRenameOUCompletedEventHandler(object sender, SvIdgRenameOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgRenameOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgRenameOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvIdgDelectOUCompletedEventHandler(object sender, SvIdgDelectOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvIdgDelectOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvIdgDelectOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SvGetGroupUserArrCompletedEventHandler(object sender, SvGetGroupUserArrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SvGetGroupUserArrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SvGetGroupUserArrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591